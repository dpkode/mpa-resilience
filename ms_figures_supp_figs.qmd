---
title: "Figures and supplemental figures for ecological resilience ms"
author: "Botsford, Hastings, White, and Kilduff"
execute: 
  warning: false
format:
  html: 
    page-layout: full
    embed-resources: true
    anchor-sections: true
    fig-width: 7
    fig-height: 5
  pdf:
    fig-width: 7
    fig-height: 5
  docx:
    fig-width: 7
    fig-height: 5
editor: visual
---

List of DuckDB tables

-   "larval_pool_blue_rockfish_mei_135_75"
-   "larval_pool_blue_rockfish_white_135_75"
-   "larval_pool_cabezon_mei_135_75"
-   "larval_pool_cabezon_white_135_75"
-   "larval_pool_china_rockfish_mei_135_75"
-   "larval_pool_china_rockfish_white_135_75"
-   "no_dispersal_blue_rockfish_mei_135_75"
-   "no_dispersal_blue_rockfish_white_135_75"
-   "no_dispersal_cabezon_mei_135_75"
-   "no_dispersal_cabezon_white_135_75"
-   "no_dispersal_china_rockfish_mei_135_75"
-   "no_dispersal_china_rockfish_white_135_75"

## Config and set up

```{r}
#| label: setup 
#| echo: false

# load packages, source functions, set options, make output file, establish DB connection
library(targets)
library(DBI)
library(duckdb)
library(cowplot)
suppressMessages(library(tidyverse))

options(dplyr.summarise.inform = FALSE)

main_figs_path <- file.path("output", "main_figs")
supp_figs_path <- file.path("output", "supp_figs")

# Load project functions
source("R/functions.R")
source("R/fig_functions.R")

if (!dir.exists(main_figs_path)) {
  dir.create(main_figs_path, recursive = TRUE) 
}

if (!dir.exists(supp_figs_path)) {
  dir.create(supp_figs_path, recursive = TRUE) 
}

con <- DBI::dbConnect(duckdb::duckdb(),
                      dbdir = "data/sim_out.duckdb",
                      read_only = FALSE)
```

```{r}
#| label: load-data-set-global-parms
#| echo: false


# Load relevant data from target objexts
tar_load(sim_nums)
tar_load(burn_in)
tar_load(sim_len_135)
tar_load(species_flep_fished_ind)
tar_load(fishing_mortality_values)
tar_load(species_parms)
tar_load(sim_species_parms)
tar_load(sim_species_derived_vars)

# constants
burn_in_parm <- burn_in
sim_len_parm <- sim_len_135

# plotting params
x_text_position_parm <- 550 
max_reserve_frac <- 0.5
max_f_fmsy <- 2.5

# set 
r_seed <- 11
set.seed(r_seed)

# A total of 25 (2023/11/08) simulations were run for each paramter set
# This set allows us to determine the number of simulations to use 
# in the contour plots to produce clear contours by picking a random subset of
# simulations up to the full set of simulations

# num_sims_2_avg <- 5

sims_2_use <- 1:5 # sort(sample(1:sim_nums, size = num_sims_2_avg, replace = FALSE))

```

## Main figures

brf_white_lp_current \<- get_current_exp(table_name = "larval_pool_blue_rockfish_white_135_75")

brf_white_lp_nice \<- get_nice_exp(table_name = "larval_pool_blue_rockfish_white_135_75")

brf_white_lp_current\[\[1\]\]

brf_white_lp_current\[\[2\]\]

brf_white_lp_current\[\[3\]\]

brf_white_lp_nice\[\[1\]\]

brf_white_lp_nice\[\[2\]\]

brf_white_lp_nice\[\[3\]\]

```{r}
#| label: main-figs-and-species-parms

# Set table names to be used to make the main figures

table_name_nd <- "no_dispersal_blue_rockfish_mei_135_75"
table_name_lp <- "larval_pool_blue_rockfish_mei_135_75"
table_name_nd_white <- "no_dispersal_blue_rockfish_white_135_75"
table_name_lp_white <- "larval_pool_blue_rockfish_white_135_75"

# Get meta data descriptins from the table names and the pretty 
# versions for plotting

brf_mei_nd_current <- get_current_exp(table_name = table_name_nd)
brf_mei_nd_nice <- get_nice_exp(table_name = table_name_nd)

brf_white_nd_current <- get_current_exp(table_name = table_name_nd_white)
brf_white_nd_nice <- get_nice_exp(table_name = table_name_nd_white)

brf_mei_lp_current <- get_current_exp(table_name = table_name_lp)
brf_mei_lp_nice <- get_nice_exp(table_name = table_name_lp)

brf_white_lp_current <- get_current_exp(table_name = table_name_lp_white)
brf_white_lp_nice <- get_nice_exp(table_name = table_name_lp_white)

```

### Figure 3

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when there is no larval dispersal between the fished and reserve habitat patches.

Species: Blue rockfish

Dispersal: No Dispersal

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_3

# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name <- brf_mei_nd_nice[[2]]
brf_waa_g <- sim_species_parms[[species_name]][["biom_const"]] * sim_species_derived_vars[[species_name]][["length_at_age"]] ^
                    sim_species_parms[[species_name]][["biom_exp"]]

brf_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name]]$A_max,
                           waa_g = brf_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs <-
  get_fs_from_fleps(species = species_name,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

## Qry 
qry <- paste0("SELECT  sim_num, reserve_frac, flep_ratio, year, age, 
              sum(number) as abundance,
              sum(yield) as yield,
              FROM '", table_name_nd, 
              "' WHERE sim_num IN (", toString(sims_2_use), ") AND year > 500 
              GROUP BY sim_num, reserve_frac, flep_ratio, year, age
              ORDER BY sim_num, reserve_frac, flep_ratio, year, age
              ")

sim_res_out <- dbGetQuery(conn = con, qry)

#######


########### PIPELINING
F_brf_maxes_yield <- get_f_maxes_yield(input_df = sim_res_out,
                                         fleps_2_fs = spec_fleps_2_fs)
F_brf_maxes_yield

out_fs <- df_add_fs_out (input_df = sim_res_out,
                         spec_fleps_2_fs = spec_fleps_2_fs,
                         F_maxes_yield = F_brf_maxes_yield, waa_g_df = brf_waa_g_df)
out_fs

med_yield <- get_median_yield(input_df = out_fs) 
med_yield

med_biomass <- get_median_biomass(input_df = out_fs, age_mat = sim_species_parms$`Blue rockfish`$A_mat)
med_biomass

out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = out_fs,
                                     age_mat = sim_species_parms$`Blue rockfish`$A_mat)#, sims_num_2_use = sims_2_use

# out_yld_bm_sims_f_frac_yr
# pipeline works to here

sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = out_yld_bm_sims_f_frac_yr,
    median_yield = med_yield,
    median_biomass = med_biomass
  )
sum_stats_f_frac_df



## Plotting

p1 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        brf_mei_nd_nice[[2]],
        " ",
        brf_mei_nd_nice[[1]],
        " ",
        brf_mei_nd_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

p2 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        brf_mei_nd_nice[[2]],
        " ",
        brf_mei_nd_nice[[1]],
        " ",
        brf_mei_nd_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()


fig3 <- plot_grid(p1, p2, labels = letters[1:2], label_size = 9, byrow = FALSE)

ggsave(filename = "output/tmp_figs/fig3-brf-nd-mei-biomass-yield.png", 
       plot = fig3, 
       height = 8, width = 5)
ggsave(filename = "output/tmp_figs/fig3-brf-nd-mei-biomass-yield.svg", 
       plot = fig3, 
       height = 8, width = 5)

# ggsave(filename = "output/tmp_figs/fig3-yield.png", plot = p1)
# ggsave(filename = "output/tmp_figs/fig3-biomass.png", plot = p2)
# 
# ggsave(filename = "output/tmp_figs/fig3-yield.svg", plot = p1)
# ggsave(filename = "output/tmp_figs/fig3-biomass.svg", plot = p2)

```

```{r}
out_fs %>%
  group_by(sim_num, reserve_frac, f_fmsy, year) %>%
  summarize(
    ann_yield = sum(yield, na.rm = TRUE),
    ann_biomass = sum(biomass_at_age, na.rm = TRUE)
  ) %>%
  filter(near(f_fmsy, 1) | near(f_fmsy, 0.52) | near(f_fmsy, 2.09),  near(as.numeric(reserve_frac), 0)) %>%
  ggplot(., aes(x = year, y = ann_biomass)) +
  geom_line() +
  facet_grid(f_fmsy ~ sim_num) 


out_fs %>%
  group_by(sim_num, reserve_frac, f_fmsy, year) %>%
  summarize(
    ann_yield = sum(yield, na.rm = TRUE),
    ann_biomass = sum(biomass_at_age, na.rm = TRUE)
  ) %>%
 filter(near(f_fmsy, 1) | near(f_fmsy, 0.52) | near(f_fmsy, 2.09),  near(as.numeric(reserve_frac), 0)) %>%
  ungroup() %>%
  ggplot(., aes(x = year, y = ann_yield)) +
  geom_line() +
  facet_grid(f_fmsy ~ sim_num) 
  
  
out_fs %>%
    group_by(sim_num, reserve_frac, f_fmsy, year) %>%
    summarize(
        ann_yield = sum(yield, na.rm = TRUE),
        ann_biomass = sum(biomass_at_age, na.rm = TRUE)
    ) %>%
    # filter(near(f_fmsy, 1) | near(f_fmsy, 0.52) | near(f_fmsy, 2.09),  near(as.numeric(reserve_frac), 0)) %>%
    ungroup() %>%
  group_by(sim_num, f_fmsy) %>%
  summarize(med_ann_yield = median(ann_yield)) %>%
  ggplot(., aes(x = f_fmsy, y = med_ann_yield)) +
  geom_line() +
  facet_grid(sim_num ~ .)

```

### Figure 4

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when there is larval pool dispersal between the fished and reserve habitat patches.

Species: Blue rockfish

Dispersal: Larval Pool Dispersal

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_4

# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name <- brf_mei_lp_nice[[2]]
brf_waa_g <- sim_species_parms[[species_name]][["biom_const"]] * sim_species_derived_vars[[species_name]][["length_at_age"]] ^
                    sim_species_parms[[species_name]][["biom_exp"]]

brf_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name]]$A_max,
                           waa_g = brf_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs <-
  get_fs_from_fleps(species = species_name,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

## Qry 
qry <- paste0("SELECT  sim_num, reserve_frac, flep_ratio, year, age, 
              sum(number) as abundance,
              sum(yield) as yield,
              FROM '", table_name_lp, 
              "' WHERE sim_num IN (", toString(sims_2_use), ") AND year > 500 
              GROUP BY sim_num, reserve_frac, flep_ratio, year, age
              ORDER BY sim_num, reserve_frac, flep_ratio, year, age
              ")

sim_res_out_brf_mei_lp <- dbGetQuery(conn = con, qry)

#######


########### PIPELINING
F_brf_maxes_yield <- get_f_maxes_yield(input_df = sim_res_out_brf_mei_lp,
                                         fleps_2_fs = spec_fleps_2_fs)
F_brf_maxes_yield

out_fs <- df_add_fs_out (input_df = sim_res_out_brf_mei_lp,
                         spec_fleps_2_fs = spec_fleps_2_fs,
                         F_maxes_yield = F_brf_maxes_yield, waa_g_df = brf_waa_g_df)
out_fs

med_yield <- get_median_yield(input_df = out_fs) 
med_yield

med_biomass <- get_median_biomass(input_df = out_fs,
                                  age_mat = sim_species_parms$`Blue rockfish`$A_mat)
med_biomass

out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = out_fs, 
                                     age_mat = sim_species_parms$`Blue rockfish`$A_mat)

# pipeline works to here

sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = out_yld_bm_sims_f_frac_yr,
    median_yield = med_yield,
    median_biomass = med_biomass
  )
sum_stats_f_frac_df



## Plotting

p1 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        brf_mei_lp_nice[[2]],
        " ",
        brf_mei_lp_nice[[1]],
        " ",
        brf_mei_lp_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

p2 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        brf_mei_lp_nice[[2]],
        " ",
        brf_mei_lp_nice[[1]],
        " ",
        brf_mei_lp_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

fig4 <- plot_grid(p1, p2, labels = letters[1:2], label_size = 9, byrow = FALSE)

ggsave(filename = "output/tmp_figs/fig4-brf-lp-biomass-yield.png", 
       plot = fig4, 
       height = 8, width = 5)
ggsave(filename = "output/tmp_figs/fig4-brf-lp-biomass-yield.svg", 
       plot = fig4, 
       height = 8, width = 5)



# ggsave(filename = "output/tmp_figs/fig4-yield.png", plot = p1)
# ggsave(filename = "output/tmp_figs/fig4-biomass.png", plot = p2)
# 
# ggsave(filename = "output/tmp_figs/fig4-yield.svg", plot = p1)
# ggsave(filename = "output/tmp_figs/fig4-biomass.svg", plot = p2)


```

```{r}

#| label: boneyard
prep_ann_yield_abund_for_plot <- function(df_out_fs,
                                          frac_reserves = c(0, 0.25, 0.50),
                                          f_fmsys = c(0, 0.52, 1.00, 2.09)) {
  
  sim_num_2_use <- min(df_out_fs$sim_num)
  if (length(f_fmsys) < 1 | is.null(f_fmsys)) {
    stop("Please specify f_fmsy values to use")
  }
  
  if (length(frac_reserves) < 1 | is.null(frac_reserves)) {
    stop("Please specify frac_reserves values to use")
  }

    
    # make a sub function
    
    return(list(main_plt_df, supp_plt_df, med_yield))
  }
```

### Figure 4

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when the fished and reserve patches share a larval pool.

Species: Blue rockfish

Dispersal: Larval pool

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_4
```

### Figure 5

Representative timeseries of total population biomass under different combinations of fishing rate and marine reserve protection.

Species: Blue rockfish

Dispersal: Larval pool

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_5

 

# brf_mei_lp_nice[[2]]
# brf_mei_lp_nice[[1]]
# brf_mei_lp_nice[[3]]

bio_yield_df <- out_fs
summary_stats_df <- sum_stats_f_frac_df

yield_thresh <- med_yield
biomass_thresh <- med_biomass 

exp_deets <- brf_mei_lp_nice

text <- TRUE
# x_text_val <- 550
x_min <- 500
x_max <- 635
x_text_val <- (x_max) - (x_max - x_min)/2

r_seed <- 34

frac_reserves <- c(0, 0.25, 0.50)
f_fmsys <- c(0.52, 1.00, 2.09)

# facet_bm_yld_ts_plots <- function(bio_yield_df,  # main_plt_df
#                                  summary_stats_df, # sub_plt_df,
#                                  yield_thresh,
#                                  biomass_thresh,
#                                  exp_deets,
#                                  x_text_val = 550,
#                                  r_seed = 34,
#                                  frac_reserves = c(0, 0.25, 0.50),
#                                  f_fmsys = c(0.52, 1.00, 2.09)) {

set.seed(r_seed)
sim_2_use <-
  sample(sort(unique(bio_yield_df$sim_num)), 1, replace = FALSE)

f_fmsys_bio <- c(0, f_fmsys)

### FUNCTION
plt_species <- unique(exp_deets[[2]])
plt_dispersal <- unique(exp_deets[[1]])
plt_noise <- unique(exp_deets[[3]])

title_string <- paste0(
  "Simulation results: \n",
  plt_species,
  " with ",
  plt_dispersal,
  " dispersal and ",
  plt_noise,
  " noise. \n"
)

### FUNCTION
u_f_fmsys <- unique(bio_yield_df$f_fmsy)

u_f_fmsys <-
  purrr::map_dbl(f_fmsys_bio,  ~ u_f_fmsys[which.min(abs(u_f_fmsys - .x))])

# u_f_fmsys <- u_f_fmsys[u_f_fmsys_ind]

### FUNCTION
quants_df <- bio_yield_df %>%
  dplyr::group_by(sim_num, reserve_frac, f_fmsy, year) %>%
  dplyr::summarize(annual_yield = sum(yield),
                   annual_biomass = sum(biomass_at_age)) %>%
  dplyr::ungroup() %>%
  dplyr::group_by(sim_num, reserve_frac, f_fmsy) %>%
  dplyr::summarize(
    quant_80_bio = quantile(annual_biomass, 0.8),
    quant_20_bio = quantile(annual_biomass, 0.2),
    quant_80_yld = quantile(annual_yield, 0.8),
    quant_20_yld = quantile(annual_yield, 0.2)
  ) %>%
  dplyr::ungroup() %>%
  dplyr::group_by(reserve_frac, f_fmsy) %>%
  dplyr::summarize(
    quant_80_mean_bio = mean(quant_80_bio),
    quant_20_mean_bio = mean(quant_20_bio),
    quant_80_mean_yld = mean(quant_80_yld),
    quant_20_mean_yld = mean(quant_20_yld)
  ) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(reserve_frac = as.numeric(reserve_frac)) %>%
  dplyr::filter(reduce(map(
    frac_reserves, near, x = reserve_frac, tol = 1e-4
  ), `|`)) %>%
  dplyr::filter(reduce(map(
    u_f_fmsys, near, x = f_fmsy, tol = 1e-4
  ), `|`))

### FUNCTION
bio_yield_sel_df <- bio_yield_df %>%
  dplyr::mutate(reserve_frac = as.numeric(reserve_frac),
                year = year - 500) %>%
  dplyr::filter(sim_num == sim_2_use) %>%
  dplyr::filter(reduce(map(
    frac_reserves, near, x = reserve_frac, tol = 1e-4
  ), `|`)) %>%
  dplyr::filter(reduce(map(
    u_f_fmsys, near, x = f_fmsy, tol = 1e-4
  ), `|`)) %>%
  dplyr::group_by(sim_num, reserve_frac, f_fmsy, year) %>%
  dplyr::summarize(annual_biomass = sum(biomass_at_age),
                   annual_yield = sum(yield)) %>%
  dplyr::ungroup()

### FUNCTION
biom_ts_plt <- ggplot(
  bio_yield_sel_df %>% dplyr::filter(sim_num == sim_2_use),
  aes(x = year, y = annual_biomass)
) +
  facet_grid(reserve_frac ~ f_fmsy,
             labeller = labeller(f_fmsy = label_both,
                                 reserve_frac = label_both)) +
  geom_ribbon(aes(
    ymin = biomass_thresh,
    ymax = pmin(annual_biomass, biomass_thresh),
    fill = "Biomass lower"
  )) +
  geom_ribbon(aes(
    ymin = annual_biomass,
    ymax = pmin(annual_biomass, biomass_thresh),
    fill = "Biomass higher"
  )) +
  geom_line(colour = "black") +
    geom_segment(aes(x = 1, y = biomass_thresh, 
                     xend = 135, yend = biomass_thresh),
             colour = "red",
             linewidth = 0.6) +
  scale_fill_manual(values = c("black", "grey80")) +
  # geom_text(
  #   data = summary_stats_df,
  #   x = x_text_val,
  #   y = 11000,
  #   aes(label = mean_biomass_lab)
  # ) +
  # geom_text(
  #   data = summary_stats_df,
  #   x = x_text_val,
  #   y = 12500,
  #   aes(label = sd_biomass_lab)
# ) +
# geom_text(
#   data = summary_stats_df,
#   x = x_text_val,
#   y = 14000,
#   aes(label = yrs_below_thresh)
# ) +
# geom_text(
#   data = summary_stats_df,
#   x = x_text_val,
#   y = 9500,
#   aes(label = cv_biomass_lab)
# ) +
labs(fill = "Above/Below Biomass threshold") +
  ggtitle(title_string) +
  xlab("Year") +
  ylab("Biomass (metric tons)") +
  ylim(0, NA) +
  labs(colour = "Reserve\nfraction") +
  theme_minimal() +
  # geom_hline(data = quants_df, aes(yintercept = quant_80_mean_bio), colour = "orange", linewidth = 1.1, linetype = 1) +
  # geom_hline(data = quants_df, aes(yintercept = quant_20_mean_bio), colour = "orange", linewidth = 1.1, linetype = 1) +
  scale_x_continuous(expand = expansion(mult = 0, add = 0)) +
  theme(
    axis.line = element_line(colour = "black"),
    panel.background = element_rect(fill = "white"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank()
  )

#### ?? FUNCTION: YIELD VERSION
yld_ts_plt <- bio_yield_sel_df %>%
  dplyr::filter(f_fmsy != 0) %>%
  ggplot(data = ., aes(x = year, y = annual_yield)) +
  facet_grid(reserve_frac ~ f_fmsy,
             labeller = labeller(f_fmsy = label_both,
                                 reserve_frac = label_both)) +
  geom_ribbon(aes(
    ymin = yield_thresh,
    ymax = pmin(annual_yield, yield_thresh),
    fill = "Yield lower"
  )) +
  geom_ribbon(aes(
    ymin = annual_yield,
    ymax = pmin(annual_yield, yield_thresh),
    fill = "Yield higher"
  )) +
  geom_line(colour = "black") +
  geom_segment(aes(x = 1, y = yield_thresh, 
                     xend = 135, yend = yield_thresh),
             colour = "red",
             linewidth = 0.6) +
  scale_fill_manual(values = c("black", "grey80")) +
  # geom_text(
  #   data = summary_stats_df,
  #   x = x_text_val,
  #   y = 11000,
  #   aes(label = mean_biomass_lab)
  # ) +
  # geom_text(
  #   data = summary_stats_df,
  #   x = x_text_val,
  #   y = 12500,
  #   aes(label = sd_biomass_lab)
# ) +
# geom_text(
#   data = summary_stats_df,
#   x = x_text_val,
#   y = 14000,
#   aes(label = yrs_below_thresh)
# ) +
# geom_text(
#   data = summary_stats_df,
#   x = x_text_val,
#   y = 9500,
#   aes(label = cv_biomass_lab)
# ) +
labs(fill = "Above/Below Yield threshold") +
  ggtitle(title_string) +
  xlab("Year") +
  ylab("Yield (metric tons)") +
  ylim(0, NA) +
  labs(colour = "Reserve\nfraction") +
  theme_minimal() +
  # geom_hline(data = quants_df %>% dplyr::filter(f_fmsy != 0), aes(yintercept = quant_80_mean_yld), colour = "orange", linewidth = 1.1, linetype = 1) +
  # geom_hline(data = quants_df %>% dplyr::filter(f_fmsy != 0), aes(yintercept = quant_20_mean_yld), colour = "orange", linewidth = 1.1, linetype = 1) +
  scale_x_continuous(expand = expansion(mult = 0, add = 0)) +
  theme(
    axis.line = element_line(colour = "black"),
    panel.background = element_rect(fill = "white"),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank()
  )
# }

print(biom_ts_plt)
print(yld_ts_plt)

ggsave(filename = "output/tmp_figs/fig5-biomass-timeseries.png", plot = biom_ts_plt,
       height = 8, width = 10)
ggsave(filename = "output/tmp_figs/fig6-yield-timeseries.png", plot = yld_ts_plt,
       height = 8, width = 10)

ggsave(filename = "output/tmp_figs/fig5-biomass-timeseries.svg", plot = biom_ts_plt,
       height = 8, width = 10)
ggsave(filename = "output/tmp_figs/fig6-yield-timeseries.svg", plot = yld_ts_plt,
       height = 8, width = 10)

```

### Figure 6

Representative timeseries of fishery yield under different combinations of fishing rate and marine reserve protection.

Species: Blue rockfish

Dispersal: Larval pool

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_6



```

### Figure 7

Representative timeseries of fishery yield (black curves) in the same harvest and marine reserve scenarios depicted in Fig. 5.

Species: Blue rockfish

Dispersal: Larval pool

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_7

t_c <- species_parms[which(species_parms$species == species_name),]$A_fish

u_f_fmsys <- unique(bio_yield_df$f_fmsy)

f_fmsys_targs <- c(0.52, 1.00, 2.09)

u_f_fmsys <-
  purrr::map_dbl(f_fmsys_targs,  ~ u_f_fmsys[which.min(abs(u_f_fmsys - .x))])

recs_spec_disp_noise_ffmsy_plt <- bio_yield_df %>%
  dplyr::filter(sim_num == 1, age == 1) %>%
  dplyr::mutate(reserve_frac = as.numeric(reserve_frac)) %>%
  dplyr::filter(reduce(map(
    frac_reserves, near, x = reserve_frac, tol = 1e-4
  ), `|`),
  reduce(map(
    u_f_fmsys, near, x = f_fmsy, tol = 1e-4
  ), `|`)) %>%
  mutate(year = year - 500,
         lagged_year = year + t_c) 


yield_spec_disp_noise_prep_plt <- bio_yield_df %>% 
  dplyr::filter(sim_num == 1) %>%
  dplyr::mutate(reserve_frac = as.numeric(reserve_frac)) %>%
  dplyr::group_by(reserve_frac, f_fmsy, year) %>%
  dplyr::summarize(annual_yield = sum(yield)) %>%
  dplyr::ungroup() %>%
  dplyr::filter(reduce(map(
    frac_reserves, near, x = reserve_frac, tol = 1e-4
  ), `|`),
  reduce(map(
    u_f_fmsys, near, x = f_fmsy, tol = 1e-4
  ), `|`))  %>%
  mutate(year = year - 500)

plt_start_yr <- 100
plt_end_yr <- 135

scaled_yield_plt <- yield_spec_disp_noise_prep_plt %>%
  group_by(reserve_frac, f_fmsy) %>%
  mutate(scaled_yield = scale(annual_yield)[,1]) %>%
  ungroup()

scaled_recs_plt <- recs_spec_disp_noise_ffmsy_plt %>% 
  group_by(reserve_frac, f_fmsy) %>%
  mutate(scaled_recruits = scale(biomass_at_age)[,1]) %>%
  ungroup()

scaled_yield_plt_4corr <- scaled_yield_plt %>%
  mutate(reserve_frac = as.character(reserve_frac), 
         f_fmsy = as.character(f_fmsy)) %>%
  select(reserve_frac, f_fmsy, year, scaled_yield)

scaled_recs_plt_4corr <- scaled_recs_plt %>%
  mutate(reserve_frac = as.character(reserve_frac), 
         f_fmsy = as.character(f_fmsy))  %>%
  select(reserve_frac, f_fmsy, lagged_year, scaled_recruits)

corr_vals <- scaled_yield_plt_4corr %>%
  left_join(scaled_recs_plt_4corr,
            by = c("reserve_frac" = "reserve_frac",
                   "f_fmsy" = "f_fmsy",
                   "year" = "lagged_year")) %>%
  filter(.,complete.cases(reserve_frac, f_fmsy, year, scaled_yield, scaled_recruits)) %>%
  group_by(reserve_frac, f_fmsy) %>%
  summarise(corr = cor(scaled_yield, scaled_recruits))

lagged_recs_yield_plt <- ggplot(scaled_yield_plt %>% 
  filter(year > plt_start_yr, 
         year <= plt_end_yr), 
       aes(x = year, y = scaled_yield)) + 
  facet_grid(reserve_frac ~ f_fmsy,
               labeller = labeller(f_fmsy = label_both,
                                   reserve_frac = label_both)) +
  geom_line(linewidth = 1.2) +
  geom_line(data = scaled_recs_plt %>% filter(lagged_year > plt_start_yr, 
         lagged_year <= plt_end_yr), aes(x = lagged_year, y = scaled_recruits), 
            colour = "blue", linewidth = 1.2) +
  geom_text(
      data = corr_vals,
      x = 1.1 * plt_start_yr ,
      y = 3,
      aes(label = paste0("Corr: ", round(corr, 3)))
  ) +
  ylab("Scaled yield (black) and lagged + scaled recruits (blue)") +
  xlab("Year") +
  theme_bw()

print(lagged_recs_yield_plt)

ggsave(
  filename = "output/tmp_figs/fig7-lagged-recs-yield-timeseries-lw.png",
  plot = lagged_recs_yield_plt,
  height = 8,
  width = 10
)

ggsave(
  filename = "output/tmp_figs/fig7-lagged-recs-yield-timeseries-lw.svg",
  plot = lagged_recs_yield_plt,
  height = 8,
  width = 10
)
```

### Figure 3 - white noise check

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when there is no larval dispersal between the fished and reserve habitat patches.

Species: Blue rockfish

Dispersal: no dispersal

Environmental noise: white noise

```{r}



```

### Figure 4 - white noise check

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when there is larval pool dispersal between the fished and reserve habitat patches.

Species: Blue rockfish

Dispersal: Larval Pool Dispersal

Environmental noise: White

```{r}



# 
# ggsave(filename = "output/tmp_figs/fig4-yield-white-noise-chk.png", plot = p1)
# ggsave(filename = "output/tmp_figs/fig4-biomass-white-noise-chk.png", plot = p2)

```

### Cabezon

```{r}
# # Set table names to be used to make the main figures
# 
# table_name_nd <- "no_dispersal_cabezon_mei_135_75"
# table_name_lp <- "larval_pool_cabezon_mei_135_75"
# table_name_nd_white <- "no_dispersal_abezon_white_135_75"
# table_name_lp_white <- "larval_pool_cabezon_white_135_75"
# 
# # Get meta data descriptins from the table names and the pretty 
# # versions for plotting
# 
# cab_mei_nd_current <- get_current_exp(table_name = table_name_nd)
# cab_mei_nd_nice <- get_nice_exp(table_name = table_name_nd)
# cab_white_nd_current <- get_current_exp(table_name = table_name_nd_white)
# cab_white_nd_nice <- get_nice_exp(table_name = table_name_nd_white)
# cab_mei_lp_current <- get_current_exp(table_name = table_name_lp)
# cab_mei_lp_nice <- get_nice_exp(table_name = table_name_lp)
# cab_white_lp_current <- get_current_exp(table_name = table_name_lp_white)
# cab_white_lp_nice <- get_nice_exp(table_name = table_name_lp_white)
# 

```

### Figure 3 - MEI Cabezon

Contour plots showing the buffering effects of harvest rate and marine reserves on the abundance of a fished population, when there is no larval dispersal between the fished and reserve habitat patches.

Species: Cabezon

Dispersal: No Dispersal

Environmental noise: ENSO (MEI)

```{r}
#| label: figure_3
# 
# # use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
# species_name <- cab_mei_nd_nice[[2]]
# brf_waa_g <- sim_species_parms[[species_name]][["biom_const"]] * sim_species_derived_vars[[species_name]][["length_at_age"]] ^
#                     sim_species_parms[[species_name]][["biom_exp"]]
# 
# brf_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name]]$A_max,
#                            waa_g = brf_waa_g)
# 
# # use functions to create useful data structures
# # FLEP to F reference tables by species
# spec_fleps_2_fs <-
#   get_fs_from_fleps(species = species_name,
#                     flep_inds = species_flep_fished_ind,
#                     f_vals =  fishing_mortality_values) 
# 
# ## Qry 
# qry <- paste0("SELECT  sim_num, reserve_frac, flep_ratio, year, age, 
#               sum(number) as abundance,
#               sum(yield) as yield,
#               FROM '", table_name_nd, 
#               "' WHERE sim_num IN (", toString(sims_2_use), ") AND year > 500 
#               GROUP BY sim_num, reserve_frac, flep_ratio, year, age
#               ORDER BY sim_num, reserve_frac, flep_ratio, year, age
#               ")
# 
# sim_res_out <- dbGetQuery(conn = con, qry)
# 
# #######
# 
# 
# ########### PIPELINING
# F_brf_maxes_yield <- get_f_maxes_yield(input_df = sim_res_out,
#                                          fleps_2_fs = spec_fleps_2_fs)
# F_brf_maxes_yield
# 
# out_fs <- df_add_fs_out (input_df = sim_res_out,
#                          spec_fleps_2_fs = spec_fleps_2_fs,
#                          F_maxes_yield = F_brf_maxes_yield, waa_g_df = brf_waa_g_df)
# out_fs
# 
# med_yield <- get_median_yield(input_df = out_fs) 
# med_yield
# 
# med_biomass <- get_median_biomass(input_df = out_fs, age_mat = sim_species_parms$`Blue rockfish`$A_mat)
# med_biomass
# 
# out_yld_bm_sims_f_frac_yr <-
#   df_yld_bm_stats_by_sim_f_frac_year(input_df = out_fs,
#                                      age_mat = sim_species_parms$`Blue rockfish`$A_mat)#, sims_num_2_use = sims_2_use
# 
# # out_yld_bm_sims_f_frac_yr
# # pipeline works to here
# 
# sum_stats_f_frac_df <-
#   summary_stats_by_f_frac(
#     out_sim_f_frac_yr = out_yld_bm_sims_f_frac_yr,
#     median_yield = med_yield,
#     median_biomass = med_biomass
#   )
# sum_stats_f_frac_df
# 
# ## Plotting
# 
# p1 <- sum_stats_f_frac_df[[2]] %>%
#   filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
#   ggplot(.,
#        aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
#   metR::geom_contour_fill(bins = 12) + 
#   ggtitle(paste0(
#         cab_mei_nd_nice[[2]],
#         " ",
#         cab_mei_nd_nice[[1]],
#         " ",
#         cab_mei_nd_nice[[3]],
#         ":\nTime below median max yield"
#       )) +
#       xlab("Fraction of coastline in reserves") +
#       ylab("Harvest Rate (F/Fmsy)") +
#       scale_fill_viridis_c(option = "D", direction = -1) +
#       geom_segment(aes(
#         x = 0,
#         xend = max_reserve_frac,
#         y = 1,
#         yend = 1
#       ), colour = "black",
#       linetype = 2) +
#       scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
#       scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
#       theme_bw()
# 
# 
# p2 <- sum_stats_f_frac_df[[2]] %>%
#   filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
#   ggplot(.,
#        aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
#   metR::geom_contour_fill(bins = 12) +
#   ggtitle(paste0(
#         cab_mei_nd_nice[[2]],
#         " ",
#         cab_mei_nd_nice[[1]],
#         " ",
#         cab_mei_nd_nice[[3]],
#         ":\nTime below mean median biomass "
#       )) +
#       xlab("Fraction of coastline in reserves") +
#       ylab("Harvest Rate (F/Fmsy)") +
#       scale_fill_viridis_c(option = "D", direction = -1) +
#       geom_segment(aes(
#         x = 0,
#         xend = max_reserve_frac,
#         y = 1,
#         yend = 1
#       ), colour = "black",
#       linetype = 2) +
#       scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
#       scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
#       theme_bw()
# 
# print(p1)
# print(p2)

# ggsave(filename = "output/tmp_figs/fig3-yield-cab.png", plot = p1)
# ggsave(filename = "output/tmp_figs/fig3-biomass-cab.png", plot = p2)

```

### Better funcs

```{r}

table_name_chr_nd_white <- "no_dispersal_china_rockfish_white_135_75"
table_name_cab_nd_white <- "no_dispersal_cabezon_white_135_75"
table_name_chr_lp_white <- "larval_pool_china_rockfish_white_135_75"
table_name_cab_lp_white <- "larval_pool_cabezon_white_135_75"

table_name_chr_nd_mei <- "no_dispersal_china_rockfish_mei_135_75"
table_name_cab_nd_mei <- "no_dispersal_cabezon_mei_135_75"
table_name_chr_lp_mei <- "larval_pool_china_rockfish_mei_135_75"
table_name_cab_lp_mei <- "larval_pool_cabezon_mei_135_75"


# Get meta data descriptins from the table names and the pretty 
# versions for plotting

chr_nd_white_nice <- get_nice_exp(table_name = table_name_chr_nd_white)
cab_nd_white_nice <- get_nice_exp(table_name = table_name_cab_nd_white)
chr_lp_white_nice <- get_nice_exp(table_name = table_name_chr_lp_white)
cab_lp_white_nice <- get_nice_exp(table_name = table_name_cab_lp_white)
chr_nd_mei_nice <- get_nice_exp(table_name = table_name_chr_nd_mei)
cab_nd_mei_nice <- get_nice_exp(table_name = table_name_cab_nd_mei)
chr_lp_mei_nice <- get_nice_exp(table_name = table_name_chr_lp_mei)
cab_lp_mei_nice <- get_nice_exp(table_name = table_name_cab_lp_mei)


## Qry 

run_qry_get_sims <- function(table_name, burn_in = 500) {
  con <- DBI::dbConnect(duckdb::duckdb(),
                        dbdir = "data/sim_out.duckdb",
                        read_only = FALSE)
  qry <-
    paste0(
      "SELECT  sim_num, reserve_frac, flep_ratio, year, age,
              sum(number) as abundance,
              sum(yield) as yield,
              FROM '",
      table_name,
      "' WHERE year > 500
              GROUP BY sim_num, reserve_frac, flep_ratio, year, age
              ORDER BY sim_num, reserve_frac, flep_ratio, year, age
              "
    )
  
  sim_res_out <- dbGetQuery(conn = con, qry)
  sim_res_out$year = sim_res_out$year - 500
  DBI::dbDisconnect(conn = con, shutdown=TRUE)
  return(sim_res_out)
}


chr_nd_white_df <-
  run_qry_get_sims(table_name = table_name_chr_nd_white, burn_in = 500)
cab_nd_white_df <-
  run_qry_get_sims(table_name = table_name_cab_nd_white, burn_in = 500)
chr_lp_white_df <-
  run_qry_get_sims(table_name = table_name_chr_lp_white, burn_in = 500)
cab_lp_white_df <-
  run_qry_get_sims(table_name = table_name_cab_lp_white, burn_in = 500)
chr_nd_mei_df <-
  run_qry_get_sims(table_name = table_name_chr_nd_mei, burn_in = 500)
cab_nd_mei_df <-
  run_qry_get_sims(table_name = table_name_cab_nd_mei, burn_in = 500)
chr_lp_mei_df <-
  run_qry_get_sims(table_name = table_name_chr_lp_mei, burn_in = 500)
cab_lp_mei_df <-
  run_qry_get_sims(table_name = table_name_cab_lp_mei, burn_in = 500)


# CABEZON
# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name_cab <- cab_nd_mei_nice[[2]]
cab_waa_g <- sim_species_parms[[species_name_cab]][["biom_const"]] * sim_species_derived_vars[[species_name_cab]][["length_at_age"]] ^
                    sim_species_parms[[species_name_cab]][["biom_exp"]]

cab_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name_cab]]$A_max,
                           waa_g = cab_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs_cab <-
  get_fs_from_fleps(species = species_name,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

# CHINA ROCKFISH
# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name_chr <- chr_nd_mei_nice[[2]]
chr_waa_g <- sim_species_parms[[species_name_chr]][["biom_const"]] * sim_species_derived_vars[[species_name_chr]][["length_at_age"]] ^
                    sim_species_parms[[species_name_chr]][["biom_exp"]]

chr_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name_chr]]$A_max,
                           waa_g = chr_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs_chr <-
  get_fs_from_fleps(species = species_name_chr,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

########### PIPELINING

F_chr_nd_white_df_maxes_yield <- get_f_maxes_yield(input_df = chr_nd_white_df,
                                         fleps_2_fs = spec_fleps_2_fs_chr)
F_chr_nd_white_df_maxes_yield

F_cab_nd_white_df_maxes_yield <- get_f_maxes_yield(input_df = cab_nd_white_df,
                                         fleps_2_fs = spec_fleps_2_fs_cab)
F_cab_nd_white_df_maxes_yield

F_chr_lp_white_df_maxes_yield <- get_f_maxes_yield(input_df = chr_lp_white_df,
                                         fleps_2_fs = spec_fleps_2_fs_chr)
F_chr_lp_white_df_maxes_yield

F_cab_lp_white_df_maxes_yield <- get_f_maxes_yield(input_df = cab_lp_white_df,
                                         fleps_2_fs = spec_fleps_2_fs_cab)
F_cab_lp_white_df_maxes_yield

F_chr_nd_mei_df_maxes_yield <- get_f_maxes_yield(input_df = chr_nd_mei_df, 
                                                 fleps_2_fs = spec_fleps_2_fs_chr)
F_chr_nd_mei_df_maxes_yield

F_cab_nd_mei_df_maxes_yield <- get_f_maxes_yield(input_df = cab_nd_mei_df, 
                                                 fleps_2_fs = spec_fleps_2_fs_cab)
F_cab_nd_mei_df_maxes_yield

F_chr_lp_mei_df_maxes_yield <- get_f_maxes_yield(input_df = chr_lp_mei_df, 
                                                 fleps_2_fs = spec_fleps_2_fs_chr)
F_chr_lp_mei_df_maxes_yield

F_cab_lp_mei_df_maxes_yield <- get_f_maxes_yield(input_df = cab_lp_mei_df, 
                                                 fleps_2_fs = spec_fleps_2_fs_cab)
F_cab_lp_mei_df_maxes_yield


##----##
# No dispersal
# white
chr_nd_white_out_fs <- df_add_fs_out (input_df = chr_nd_white_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_chr,
                         F_maxes_yield = F_chr_nd_white_df_maxes_yield, 
                         waa_g_df = chr_waa_g_df)
chr_nd_white_out_fs[1:6,]

cab_nd_white_out_fs <- df_add_fs_out (input_df = cab_nd_white_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_cab,
                         F_maxes_yield = F_cab_nd_white_df_maxes_yield, 
                         waa_g_df = cab_waa_g_df)
cab_nd_white_out_fs[1:6,]
# enso
chr_nd_mei_out_fs <- df_add_fs_out (input_df = chr_nd_mei_df ,
                         spec_fleps_2_fs = spec_fleps_2_fs_chr,
                         F_maxes_yield = F_chr_nd_mei_df_maxes_yield, 
                         waa_g_df = chr_waa_g_df)
chr_nd_mei_out_fs[1:6,]

cab_nd_mei_out_fs <- df_add_fs_out (input_df = cab_nd_mei_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_cab,
                         F_maxes_yield = F_cab_nd_mei_df_maxes_yield, 
                         waa_g_df = cab_waa_g_df)
cab_nd_mei_out_fs[1:6,]

# Larval pool
# white
chr_lp_white_out_fs <- df_add_fs_out (input_df = chr_lp_white_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_chr,
                         F_maxes_yield = F_chr_lp_white_df_maxes_yield, 
                         waa_g_df = chr_waa_g_df)
chr_lp_white_out_fs[1:6,]

cab_lp_white_out_fs <- df_add_fs_out (input_df = cab_lp_white_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_cab,
                         F_maxes_yield = F_cab_lp_white_df_maxes_yield, 
                         waa_g_df = cab_waa_g_df)
cab_lp_white_out_fs[1:6,]
# enso
chr_lp_mei_out_fs <- df_add_fs_out (input_df = chr_lp_mei_df ,
                         spec_fleps_2_fs = spec_fleps_2_fs_chr,
                         F_maxes_yield = F_chr_lp_mei_df_maxes_yield, 
                         waa_g_df = chr_waa_g_df)
chr_lp_mei_out_fs[1:6,]

cab_lp_mei_out_fs <- df_add_fs_out (input_df = cab_lp_mei_df,
                         spec_fleps_2_fs = spec_fleps_2_fs_cab,
                         F_maxes_yield = F_cab_lp_mei_df_maxes_yield, 
                         waa_g_df = cab_waa_g_df)
cab_lp_mei_out_fs[1:6,]

##----##

# White
# No dispersal
chr_nd_white_med_yield <- get_median_yield(input_df = chr_nd_white_out_fs) 
chr_nd_white_med_yield
cab_nd_white_med_yield <- get_median_yield(input_df = cab_nd_white_out_fs) 
cab_nd_white_med_yield
# larval pool dispersal 
chr_lp_white_med_yield <- get_median_yield(input_df = chr_lp_white_out_fs) 
chr_lp_white_med_yield
cab_lp_white_med_yield <- get_median_yield(input_df = cab_lp_white_out_fs) 
cab_lp_white_med_yield


# ENSO
# No dispersal
chr_nd_mei_med_yield <- get_median_yield(input_df = chr_nd_mei_out_fs) 
chr_nd_mei_med_yield
cab_nd_mei_med_yield <- get_median_yield(input_df = cab_nd_mei_out_fs) 
cab_nd_mei_med_yield
# larval pool dispersal
chr_lp_mei_med_yield <- get_median_yield(input_df = chr_lp_mei_out_fs) 
chr_lp_mei_med_yield
cab_lp_mei_med_yield <- get_median_yield(input_df = cab_lp_mei_out_fs) 
cab_lp_mei_med_yield

##----##

med_biomass <- get_median_biomass(input_df = out_fs, 
                                  age_mat = sim_species_parms$`Blue rockfish`$A_mat)

# White
# No dispersal
chr_nd_white_med_biomass <- get_median_biomass(input_df = chr_nd_white_out_fs, 
                                  age_mat = sim_species_parms$`China rockfish`$A_mat) 
chr_nd_white_med_biomass
cab_nd_white_med_biomass <- get_median_biomass(input_df = cab_nd_white_out_fs, 
                                  age_mat = sim_species_parms$`Cabezon`$A_mat) 
cab_nd_white_med_biomass
# larval pool dispersal 
chr_lp_white_med_biomass <- get_median_biomass(input_df = chr_lp_white_out_fs, 
                                  age_mat = sim_species_parms$`China rockfish`$A_mat) 
chr_lp_white_med_biomass
cab_lp_white_med_biomass <- get_median_biomass(input_df = cab_lp_white_out_fs, 
                                  age_mat = sim_species_parms$`Cabezon`$A_mat) 
cab_lp_white_med_biomass


# ENSO
# No dispersal
chr_nd_mei_med_biomass <- get_median_biomass(input_df = chr_nd_mei_out_fs, 
                                  age_mat = sim_species_parms$`China rockfish`$A_mat) 
chr_nd_mei_med_biomass
cab_nd_mei_med_biomass <- get_median_biomass(input_df = cab_nd_mei_out_fs, 
                                  age_mat = sim_species_parms$`Cabezon`$A_mat) 
cab_nd_mei_med_biomass
# larval pool dispersal
chr_lp_mei_med_biomass <- get_median_biomass(input_df = chr_lp_mei_out_fs, 
                                  age_mat = sim_species_parms$`China rockfish`$A_mat) 
chr_lp_mei_med_biomass
cab_lp_mei_med_biomass <- get_median_biomass(input_df = cab_lp_mei_out_fs, 
                                  age_mat = sim_species_parms$`Cabezon`$A_mat) 
cab_lp_mei_med_biomass


##----##

chr_nd_white_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = chr_nd_white_out_fs,
                                     age_mat = sim_species_parms$`China rockfish`$A_mat)
cab_nd_white_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = cab_nd_white_out_fs, age_mat = sim_species_parms$`Cabezon`$A_mat)
chr_lp_white_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = chr_lp_white_out_fs,
                                     age_mat = sim_species_parms$`China rockfish`$A_mat)
cab_lp_white_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = cab_lp_white_out_fs, age_mat = sim_species_parms$`Cabezon`$A_mat)
chr_nd_mei_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = chr_nd_mei_out_fs,
                                     age_mat = sim_species_parms$`China rockfish`$A_mat)
cab_nd_mei_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = cab_nd_mei_out_fs, age_mat = sim_species_parms$`Cabezon`$A_mat)
chr_lp_mei_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = chr_lp_mei_out_fs,
                                     age_mat = sim_species_parms$`China rockfish`$A_mat)
cab_lp_mei_out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = cab_lp_mei_out_fs, age_mat = sim_species_parms$`Cabezon`$A_mat)


##----##


chr_nd_white_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = chr_nd_white_out_yld_bm_sims_f_frac_yr,
    median_yield = chr_nd_white_med_yield,
    median_biomass = chr_nd_white_med_biomass
  )

cab_nd_white_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = cab_nd_white_out_yld_bm_sims_f_frac_yr,
    median_yield = cab_nd_white_med_yield,
    median_biomass = cab_nd_white_med_biomass
  )

chr_lp_white_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = chr_lp_white_out_yld_bm_sims_f_frac_yr,
    median_yield = chr_lp_white_med_yield,
    median_biomass = chr_lp_white_med_biomass
  )

cab_lp_white_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = cab_lp_white_out_yld_bm_sims_f_frac_yr,
    median_yield = cab_lp_white_med_yield,
    median_biomass = cab_lp_white_med_biomass
  )

chr_nd_mei_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = chr_nd_mei_out_yld_bm_sims_f_frac_yr,
    median_yield = chr_nd_mei_med_yield,
    median_biomass =   chr_nd_mei_med_biomass
  )

cab_nd_mei_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = cab_nd_mei_out_yld_bm_sims_f_frac_yr,
    median_yield = cab_nd_mei_med_yield,
    median_biomass =   cab_nd_mei_med_biomass
  )

chr_lp_mei_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = chr_lp_mei_out_yld_bm_sims_f_frac_yr,
    median_yield = chr_lp_mei_med_yield,
    median_biomass =   chr_lp_mei_med_biomass
  )

cab_lp_mei_sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = cab_lp_mei_out_yld_bm_sims_f_frac_yr,
    median_yield = cab_lp_mei_med_yield,
    median_biomass =   cab_lp_mei_med_biomass
  )





```

### Supp Fig 1

Biomass and yield contours for Blue rockfish

-   white noise

-   no dispersal and larval pool

```{r}
#| label: supp_fig_1

# Species: Blue rockfish
# Dispersal: No Dispersal
# Environmental noise: White


con <- DBI::dbConnect(duckdb::duckdb(),
                        dbdir = "data/sim_out.duckdb",
                        read_only = FALSE)



# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name <- brf_mei_nd_nice[[2]]
brf_waa_g <- sim_species_parms[[species_name]][["biom_const"]] * sim_species_derived_vars[[species_name]][["length_at_age"]] ^
                    sim_species_parms[[species_name]][["biom_exp"]]

brf_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name]]$A_max,
                           waa_g = brf_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs <-
  get_fs_from_fleps(species = species_name,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

## Qry 
qry <- paste0("SELECT  sim_num, reserve_frac, flep_ratio, year, age, 
              sum(number) as abundance,
              sum(yield) as yield,
              FROM '", table_name_nd_white, 
              "' WHERE sim_num IN (", toString(sims_2_use), ") AND year > 500 
              GROUP BY sim_num, reserve_frac, flep_ratio, year, age
              ORDER BY sim_num, reserve_frac, flep_ratio, year, age
              ")

sim_res_out <- dbGetQuery(conn = con, qry)

#######


########### PIPELINING
F_brf_maxes_yield <- get_f_maxes_yield(input_df = sim_res_out,
                                         fleps_2_fs = spec_fleps_2_fs)
F_brf_maxes_yield

out_fs <- df_add_fs_out (input_df = sim_res_out,
                         spec_fleps_2_fs = spec_fleps_2_fs,
                         F_maxes_yield = F_brf_maxes_yield, waa_g_df = brf_waa_g_df)
out_fs

med_yield <- get_median_yield(input_df = out_fs) 
med_yield

med_biomass <- get_median_biomass(input_df = out_fs, age_mat = sim_species_parms$`Blue rockfish`$A_mat)
med_biomass

out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = out_fs,
                                     age_mat = sim_species_parms$`Blue rockfish`$A_mat)#, sims_num_2_use = sims_2_use

# out_yld_bm_sims_f_frac_yr
# pipeline works to here

sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = out_yld_bm_sims_f_frac_yr,
    median_yield = med_yield,
    median_biomass = med_biomass
  )
sum_stats_f_frac_df



## Plotting

p1 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        brf_white_nd_nice[[2]],
        " ",
        brf_white_nd_nice[[1]],
        " ",
        brf_white_nd_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()


p2 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        brf_white_nd_nice[[2]],
        " ",
        brf_white_nd_nice[[1]],
        " ",
        brf_white_nd_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()



# Species: Blue rockfish
# Dispersal: Larval Pool Dispersal
# Environmental noise: White
# use species specific vB params to create a weight at age data.frame that can be used to convert abundance at age to biomass at age
species_name <- brf_mei_lp_nice[[2]]
brf_waa_g <- sim_species_parms[[species_name]][["biom_const"]] * sim_species_derived_vars[[species_name]][["length_at_age"]] ^
                    sim_species_parms[[species_name]][["biom_exp"]]

brf_waa_g_df <- data.frame(age = 1: sim_species_parms[[species_name]]$A_max,
                           waa_g = brf_waa_g)

# use functions to create useful data structures
# FLEP to F reference tables by species
spec_fleps_2_fs <-
  get_fs_from_fleps(species = species_name,
                    flep_inds = species_flep_fished_ind,
                    f_vals =  fishing_mortality_values) 

## Qry 
qry <- paste0("SELECT  sim_num, reserve_frac, flep_ratio, year, age, 
              sum(number) as abundance,
              sum(yield) as yield,
              FROM '", table_name_lp_white, 
              "' WHERE sim_num IN (", toString(sims_2_use), ") AND year > 500 
              GROUP BY sim_num, reserve_frac, flep_ratio, year, age
              ORDER BY sim_num, reserve_frac, flep_ratio, year, age
              ")

sim_res_out <- dbGetQuery(conn = con, qry)

#######


########### PIPELINING
F_brf_maxes_yield <- get_f_maxes_yield(input_df = sim_res_out,
                                         fleps_2_fs = spec_fleps_2_fs)
F_brf_maxes_yield

out_fs <- df_add_fs_out (input_df = sim_res_out,
                         spec_fleps_2_fs = spec_fleps_2_fs,
                         F_maxes_yield = F_brf_maxes_yield, waa_g_df = brf_waa_g_df)
out_fs

med_yield <- get_median_yield(input_df = out_fs) 
med_yield

med_biomass <- get_median_biomass(input_df = out_fs,
                                  age_mat = sim_species_parms$`Blue rockfish`$A_mat)
med_biomass

out_yld_bm_sims_f_frac_yr <-
  df_yld_bm_stats_by_sim_f_frac_year(input_df = out_fs, 
                                     age_mat = sim_species_parms$`Blue rockfish`$A_mat)

# pipeline works to here

sum_stats_f_frac_df <-
  summary_stats_by_f_frac(
    out_sim_f_frac_yr = out_yld_bm_sims_f_frac_yr,
    median_yield = med_yield,
    median_biomass = med_biomass
  )
sum_stats_f_frac_df

## Plotting

p3 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        brf_white_lp_nice[[2]],
        " ",
        brf_white_lp_nice[[1]],
        " ",
        brf_white_lp_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()


p4 <- sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        brf_white_lp_nice[[2]],
        " ",
        brf_white_lp_nice[[1]],
        " ",
        brf_white_lp_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()


# print(p1)
# print(p2)
# print(p3)
# print(p4)


p_s1 <- plot_grid(p1, p2, p3, p4, labels = letters[1:4], label_size = 9, byrow = FALSE)

print(p_s1)

ggsave(filename = "output/tmp_figs/sup_fig1-brf-biomass-yield-white-nd-lp.png", 
       plot = p_s1, 
       width = 12,
       height = 8)
ggsave(filename = "output/tmp_figs/sup_fig1-brf-biomass-yield-white-nd-lp.svg", 
       plot = p_s1, 
       width = 12,
       height = 8)

DBI::dbDisconnect(conn = con, shutdown=TRUE)

```

### Supp Fig 2

China rockfish and Cabezon -- Biomass and Yield contour plots

-   ENSO noise

-   No dispersal

```{r}
#| label: supp_fig_2

## Contour plot for each species
### China rockfish
# Biomass

p1 <- chr_nd_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        chr_nd_mei_nice[[2]],
        " ",
        chr_nd_mei_nice[[1]],
        " ",
        chr_nd_mei_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

# Yield
p2 <- chr_nd_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        chr_nd_mei_nice[[2]],
        " ",
        chr_nd_mei_nice[[1]],
        " ",
        chr_nd_mei_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

print(p1)
print(p2)


### Cabezon
# Biomass
p3 <- cab_nd_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        cab_nd_mei_nice[[2]],
        " ",
        cab_nd_mei_nice[[1]],
        " ",
        cab_nd_mei_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

# Yield
p4 <- cab_nd_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        cab_nd_mei_nice[[2]],
        " ",
        cab_nd_mei_nice[[1]],
        " ",
        cab_nd_mei_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

p_s2 <- plot_grid(p1, p2, p3, p4, labels = letters[1:4], label_size = 12, byrow = FALSE)

print(p_s2)
ggsave(filename = "output/tmp_figs/sup-fig2-cab-chr-nodisp-mei-yld-biom.png", 
       plot = p_s2, 
       width = 12,
       height = 8)
ggsave(filename = "output/tmp_figs/sup-fig2-cab-chr-nodisp-mei-yld-biom.svg", 
       plot = p_s2, 
       width = 12,
       height = 8)


```

### Supp Fig 3

China rockfish and Cabezon -- Biomass and Yield contour plots

-   ENSO noise

-   larval pool dispersal

```{r}
#| label: supp_fig_3

## Contour plot for each species
### China rockfish
# Biomass

p1 <- chr_lp_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        chr_lp_mei_nice[[2]],
        " ",
        chr_lp_mei_nice[[1]],
        " ",
        chr_lp_mei_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

# Yield
p2 <- chr_lp_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        chr_lp_mei_nice[[2]],
        " ",
        chr_lp_mei_nice[[1]],
        " ",
        chr_lp_mei_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

print(p1)
print(p2)


### Cabezon
# Biomass
p3 <- cab_lp_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_biomass_thresh)) +
  metR::geom_contour_fill(bins = 12) +
  ggtitle(paste0(
        cab_lp_mei_nice[[2]],
        " ",
        cab_lp_mei_nice[[1]],
        " ",
        cab_lp_mei_nice[[3]],
        ":\nTime below mean median biomass "
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

# Yield
p4 <- cab_lp_mei_sum_stats_f_frac_df[[2]] %>%
  filter(as.numeric(reserve_frac) <= max_reserve_frac, f_fmsy <= max_f_fmsy) %>%
  ggplot(.,
       aes(x = as.numeric(reserve_frac), y = f_fmsy, z = yrs_below_yield_thresh)) +
  metR::geom_contour_fill(bins = 12) + 
  ggtitle(paste0(
        cab_lp_mei_nice[[2]],
        " ",
        cab_lp_mei_nice[[1]],
        " ",
        cab_lp_mei_nice[[3]],
        ":\nTime below median max yield"
      )) +
      xlab("Fraction of coastline in reserves") +
      ylab("Harvest Rate (F/Fmsy)") +
      scale_fill_viridis_c(option = "D", direction = -1) +
      geom_segment(aes(
        x = 0,
        xend = max_reserve_frac,
        y = 1,
        yend = 1
      ), colour = "black",
      linetype = 2) +
      scale_x_continuous(expand = expansion(mult = 0, add = 0), limits = c(0, 0.3)) +
      scale_y_continuous(expand = expansion(mult = 0, add = 0)) +
      theme_bw()

p_s3 <- plot_grid(p1, p2, p3, p4, labels = letters[1:4], label_size = 12, byrow = FALSE)

print(p_s3)
ggsave(filename = "output/tmp_figs/sup-fig3-cab-chr-lp-disp-mei-yld-biom.png", 
       plot = p_s3, 
       width = 12,
       height = 8)
ggsave(filename = "output/tmp_figs/sup-fig3-cab-chr-lp-disp-mei-yld-biom.svg", 
       plot = p_s3, 
       width = 12,
       height = 8)

```

### Supp Fig 4

Yield contours for Cabezon and China rockfish

-   white noise (or do we want ENSO?) --- white vs ENSO

-   Larval pool dispersal

```{r}
#| label: supp_fig_4
#| 
```
